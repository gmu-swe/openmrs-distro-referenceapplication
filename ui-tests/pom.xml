<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.openmrs.distro</groupId>
    <artifactId>referenceapplication-ui-tests</artifactId>
    <version>2.10.0-SNAPSHOT</version>
    <name>Reference Application Distribution UI Tests</name>
    <packaging>jar</packaging>
    <url>http://maven.apache.org</url>

    <parent>
		<groupId>org.openmrs.distro</groupId>
		<artifactId>referenceapplication</artifactId>
		<version>2.10.0-SNAPSHOT</version>
	</parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- Remote server -->
<!--        <webapp.url>https://qa-refapp.openmrs.org/openmrs</webapp.url>-->
        <!-- Local server -->
        <webapp.url>http://localhost:${tomcat.port}/openmrs</webapp.url>
        <login.username>admin</login.username>
        <login.password>Admin123</login.password>
        <webdriver>firefox</webdriver>
        <tomcat.version>9.0.19</tomcat.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.openmrs.contrib</groupId>
            <artifactId>uitestframework</artifactId>
            <version>${uitestframeworkVersion}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-core</artifactId>
            <version>${tomcat.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-jasper</artifactId>
            <version>${tomcat.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.6</version>
            <scope>test</scope>
        </dependency>
    </dependencies>


    <profiles>
        <profile>
            <id>ci</id>

            <properties>
                <login.username>admin</login.username>
                <login.password>Admin123</login.password>
            </properties>

            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <skipTests>false</skipTests>
                            <groups>org.openmrs.reference.groups.BuildTests</groups>
                            <forkCount>1</forkCount>
                            <reuseForks>true</reuseForks>
                            <systemProperties>
                                <property>
                                    <!-- Move derby.log and database to build directory -->
                                    <name>derby.stream.error.file</name>
                                    <value>${project.build.directory}/derby.log</value>
                                </property>
                                <property>
                                    <name>derby.system.home</name>
                                    <value>${project.build.directory}/db</value>
                                </property>
                                <property>
                                    <name>tomcat.base.directory</name>
                                    <value>${project.build.directory}/tomcat</value>
                                </property>
                                <property>
                                    <name>webapps.base.directory</name>
                                    <value>${project.build.directory}/webapps</value>
                                </property>
                            </systemProperties>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>7</source>
                    <target>7</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>**/*</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.18.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <skipTests>true</skipTests>
                    <rerunFailingTestsCount>2</rerunFailingTestsCount>
                    <runOrder>alphabetical</runOrder>
                    <includes>
                        <include>**/*.java</include>
                    </includes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

            <!-- Find a port for mysql to run on-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>reserve-mysql-port</id>
                        <goals>
                            <goal>reserve-network-port</goal>
                        </goals>
                        <configuration>
                            <portNames>
                                <portName>mysql.port</portName>
                            </portNames>
                        </configuration>
                    </execution>
                    <execution>
                        <id>reserve-tomcat-port</id>
                        <goals>
                            <goal>reserve-network-port</goal>
                        </goals>
                        <configuration>
                            <portNames>
                                <portName>tomcat.port</portName>
                            </portNames>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Unpack MySQL -->
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.jcabi</groupId>
                                    <artifactId>mysql-dist</artifactId>
                                    <version>5.6.14</version>
                                    <classifier>${mysql.classifier}</classifier>
                                    <type>zip</type>
                                    <overWrite>false</overWrite>
                                    <outputDirectory>
                                        ${project.build.directory}/mysql-dist
                                    </outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- start MySQL -->
            <plugin>
                <groupId>com.jcabi</groupId>
                <artifactId>jcabi-mysql-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>mysql-test</id>
                        <goals>
                            <goal>classify</goal>
                            <goal>start</goal>
                            <goal>stop</goal>
                        </goals>
                        <configuration>
                            <port>${mysql.port}</port>
                            <data>${project.build.directory}/mysql-data</data>
                            <socket>/tmp/junit-ifc-mysql.sock</socket>
                            <options>
                                <option>default-time-zone=+00:00</option>
                            </options>
                            <clearexistingdata>true</clearexistingdata>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Load in data -->
            <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>sql-maven-plugin</artifactId>
            <version>1.5</version>
                <dependencies>
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>8.0.16</version>
                    </dependency>
                </dependencies>

                <configuration>
                    <driver>com.mysql.jdbc.Driver</driver>
                    <url>jdbc:mysql://127.0.0.1:${mysql.port}/</url>
                    <username>root</username>
                    <password>root</password>
                </configuration>
                <executions>
                    <execution>
                        <id>create-schema</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <autocommit>true</autocommit>
                            <srcFiles>
                                <srcFile>../package/target/distro/dbdump/dump.sql</srcFile>
                            </srcFiles>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.1.1</version>
                <executions>
                    <execution>
                        <id>generate-config-file</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <executable>configureOpenMRS.sh</executable>
                    <environmentVariables>
                        <DB_HOST>localhost</DB_HOST>
                        <DB_DATABASE>openmrs</DB_DATABASE>
                        <DB_PORT>${mysql.port}</DB_PORT>
                        <DB_USERNAME>root</DB_USERNAME>
                        <DB_PASSWORD>root</DB_PASSWORD>
                    </environmentVariables>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <systemPropertyVariables>
                        <mysql.port>${mysql.port}</mysql.port>
                        <tomcat.port>${tomcat.port}</tomcat.port>
                        <OPENMRS_APPLICATION_DATA_DIRECTORY>${project.build.directory}/openmrs-data/</OPENMRS_APPLICATION_DATA_DIRECTORY>
                        <OPENMRS_INSTALLATION_SCRIPT>${project.build.directory}/openmrs-server.properties</OPENMRS_INSTALLATION_SCRIPT>
                    </systemPropertyVariables>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>

   <repositories>
        <repository>
            <id>openmrs-repo</id>
            <name>OpenMRS Nexus Repository</name>
            <url>http://mavenrepo.openmrs.org/nexus/content/repositories/public</url>
        </repository>
    </repositories>

</project>
